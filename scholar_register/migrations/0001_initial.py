# Generated by Django 5.0.6 on 2024-08-06 06:33

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("institute", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="StudentParents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fathers_name", models.CharField(max_length=255)),
                ("fathers_email", models.CharField(blank=True, max_length=255)),
                ("fathers_mob_no", models.CharField(max_length=255)),
                ("fathers_occupation", models.CharField(blank=True, max_length=255)),
                ("fathers_aadhar_no", models.CharField(blank=True, max_length=255)),
                ("father_annual_income", models.CharField(blank=True, max_length=255)),
                ("father_qualification", models.CharField(blank=True, max_length=255)),
                ("father_pan_no", models.CharField(blank=True, max_length=255)),
                ("mothers_name", models.CharField(max_length=255)),
                ("mothers_email", models.CharField(blank=True, max_length=255)),
                ("mothers_mob_no", models.CharField(blank=True, max_length=255)),
                ("mothers_occupation", models.CharField(blank=True, max_length=255)),
                ("mothers_aadhar_no", models.CharField(blank=True, max_length=255)),
                ("mother_annual_income", models.CharField(blank=True, max_length=255)),
                ("mother_qualification", models.CharField(blank=True, max_length=255)),
                ("mother_pan_no", models.CharField(blank=True, max_length=255)),
                ("guardian_name", models.CharField(blank=True, max_length=255)),
                ("guardian_mobile", models.CharField(blank=True, max_length=255)),
                ("guardian_relation", models.CharField(blank=True, max_length=255)),
                ("fee_deposited_by", models.CharField(blank=True, max_length=255)),
                ("sms_mob_no", models.CharField(blank=True, max_length=255)),
                (
                    "child_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.childstatus",
                    ),
                ),
                (
                    "discount_scheme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.discountscheme",
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_parent_id",
                        to="accounts.institute",
                    ),
                ),
                (
                    "student_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.studenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_parent_id",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("others", "Others"),
                        ]
                    ),
                ),
                ("dob", models.DateField()),
                ("session", models.CharField(max_length=100)),
                ("form_no", models.BigIntegerField()),
                ("date_of_admission", models.DateField()),
                ("registration_date", models.DateField()),
                (
                    "stream",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("science", "Science"),
                            ("commerce", "Commerce"),
                            ("maths", "Maths"),
                            ("arts", "Arts"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("date_of_deactivae", models.DateField(blank=True, null=True)),
                ("rte", models.BooleanField(default=False)),
                ("bpl", models.BooleanField(default=False)),
                ("prefix", models.CharField(max_length=100)),
                ("suffix", models.CharField(max_length=100)),
                ("sr_no", models.CharField(max_length=100)),
                ("reg_no", models.CharField(max_length=255)),
                ("admission_no", models.BigIntegerField()),
                ("enroll_no", models.BigIntegerField()),
                ("student_aadhar", models.CharField(blank=True, max_length=100)),
                (
                    "rural_or_urban",
                    models.CharField(choices=[("rural", "Rural"), ("urban", "Urban")]),
                ),
                (
                    "disablity_type",
                    models.CharField(
                        choices=[
                            ("NOT APPLICABLE", "NOT APPLICABLE"),
                            ("BLINDNESS", "BLINDNESS"),
                            ("LOW VISION", "LOW VISION"),
                            ("HEARING", "HEARING"),
                            ("AUTISM", "AUTISM"),
                            ("MENTAL RETARDNESS", "MENTAL RETARDNESS"),
                            ("LEARNING DISABLITY", "LEARNING DISABLITY"),
                            ("CEREBRAL PALSY", "CEREBRAL PALSY"),
                            ("MULTIPLE DISABLITIES", "MULTIPLE DISABLITIESY"),
                            ("SPEECH", "SPEECH"),
                        ]
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB- ", " AB-"),
                            ("O+ ", " O+"),
                            ("O- ", " O-"),
                        ]
                    ),
                ),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "staff_refrence",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("admission_confirm_date", models.DateField(blank=True, null=True)),
                ("board_type", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=255)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("district", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                (
                    "pin",
                    models.CharField(
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="PIN must be 6 digits.", regex="^\\d{6}$"
                            )
                        ],
                    ),
                ),
                (
                    "previous_school_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "previous_school_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reason_of_leaving",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "previous_year",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "previous_class",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("obtain_marks", models.IntegerField(blank=True, null=True)),
                ("maximum_marks", models.IntegerField(blank=True, null=True)),
                ("percentage", models.FloatField(blank=True, null=True)),
                ("result", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "previous_school_board",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "previous_school_rollNo",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "previous_school_class",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "third_lang_studied",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "student_photo",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                (
                    "fathers_photo",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                (
                    "mothers_photo",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                (
                    "guardians_photo",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("caution_money", models.IntegerField()),
                (
                    "caution_money_reciept_no",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("caution_money_reciept_date", models.DateField(blank=True, null=True)),
                ("amount", models.IntegerField()),
                ("counsellor_name", models.CharField(max_length=255)),
                ("remark", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_branch",
                        to="accounts.institutebranch",
                    ),
                ),
                (
                    "caste",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.caste",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.category",
                    ),
                ),
                (
                    "house_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.house",
                    ),
                ),
                (
                    "medium",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.medium",
                    ),
                ),
                (
                    "mother_tongue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.mothertoungue",
                    ),
                ),
                (
                    "nationality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.nationality",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_id",
                        to="scholar_register.studentparents",
                    ),
                ),
                (
                    "religion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.religion",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.section",
                    ),
                ),
                (
                    "standard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.standard",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("present", models.BooleanField(default=False)),
                ("absent", models.BooleanField(default=False)),
                (
                    "standard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.standard",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="institute.subjects",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scholar_register.studentprofile",
                    ),
                ),
            ],
        ),
    ]
